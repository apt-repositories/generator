name: Pre-Release

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  # renovate: datasource=docker depName=node versioning=node
  NODE_VERSION: "20.14.0"

jobs:
  qa-main:
    name: Call QA
    uses: ./.github/workflows/test.yml

  pre-relase:
    needs: qa-main
    name: Publish
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    concurrency: publish
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: read

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Enable Corepack
        run: corepack enable

      - name: Load cached dependencies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Determine release version
        run: echo "RELEASE_VERSION=$(node .scripts/manifest-version.cjs --canary=patch)" >> $GITHUB_ENV

      - name: Release dev version for testing
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm --no-git-tag-version --ignore-scripts version ${RELEASE_VERSION}
          npm publish --access=public --provenance --tag=next

      - name: Generate GitHub release
        uses: oliversalzburg/action-automatic-semantic-releases@bc429dc1af8c036b5f8c11fef7bcb0becfd5064d # v0.0.13
        with:
          automatic_release_tag: next
          body_prefix: |
            Published at <https://www.npmjs.com/package/@apt-repositories/generator/v/${{ env.RELEASE_VERSION }}>.
          draft: false
          prerelease: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: Snapshot Build v${{ env.RELEASE_VERSION }}
